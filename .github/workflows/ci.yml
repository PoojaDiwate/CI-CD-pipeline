name: CI - Build & Push to ECR

on:
  push:
    branches:
      - main

env:
  ECR_REPOSITORY: strapi-app-pooja

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get AWS Account ID
        id: acct
        run: |
          echo "ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

      - name: Ensure ECR repo exists & login
        run: |
          aws ecr describe-repositories --repository-names "${{ env.ECR_REPOSITORY }}" || \
            aws ecr create-repository --repository-name "${{ env.ECR_REPOSITORY }}"

          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
            docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build, tag and push Docker image
        id: build_image
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

          docker build -t ${{ env.ECR_REPOSITORY }}:$IMAGE_TAG .
          
          FULL_REPO=$ACCOUNT_ID.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
          docker tag ${{ env.ECR_REPOSITORY }}:$IMAGE_TAG $FULL_REPO
          docker push $FULL_REPO

          # Print the tag so you can copy it for Terraform
          echo "Docker image pushed with tag: $IMAGE_TAG"
